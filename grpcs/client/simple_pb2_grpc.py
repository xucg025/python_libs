# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import simple_pb2 as simple__pb2


class WaiterStub(object):
    """protoc --go_out=plugins=grpc:./ ./simple.proto

    可以定义多个服务，每个服务内可以定义多个接口
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DoMD5 = channel.unary_unary(
                '/test.Waiter/DoMD5',
                request_serializer=simple__pb2.Req.SerializeToString,
                response_deserializer=simple__pb2.Res.FromString,
                )


class WaiterServicer(object):
    """protoc --go_out=plugins=grpc:./ ./simple.proto

    可以定义多个服务，每个服务内可以定义多个接口
    """

    def DoMD5(self, request, context):
        """定义接口 (结构体可以复用)
        方法 (请求消息结构体) returns (返回消息结构体) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WaiterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DoMD5': grpc.unary_unary_rpc_method_handler(
                    servicer.DoMD5,
                    request_deserializer=simple__pb2.Req.FromString,
                    response_serializer=simple__pb2.Res.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'test.Waiter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Waiter(object):
    """protoc --go_out=plugins=grpc:./ ./simple.proto

    可以定义多个服务，每个服务内可以定义多个接口
    """

    @staticmethod
    def DoMD5(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/test.Waiter/DoMD5',
            simple__pb2.Req.SerializeToString,
            simple__pb2.Res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
